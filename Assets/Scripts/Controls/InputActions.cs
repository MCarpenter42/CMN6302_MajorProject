//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Scripts/Controls/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Universal"",
            ""id"": ""d37f62fb-28cf-4e87-9cd0-50fa73566cfc"",
            ""actions"": [
                {
                    ""name"": ""showHideMenu"",
                    ""type"": ""Button"",
                    ""id"": ""49fce4bf-ef86-49e8-b05a-28fadbc2c585"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6cc6d0ba-1e82-468b-b04c-733de8a19cea"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""showHideMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc14972a-a3da-4faf-a458-586dde4f2112"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""showHideMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""0f506879-3d77-40dc-9568-03dfdcd4005d"",
            ""actions"": [
                {
                    ""name"": ""moveSelectUp"",
                    ""type"": ""Button"",
                    ""id"": ""900c06f0-53c4-40a1-a67f-00f8bf8fa796"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""moveSelectDown"",
                    ""type"": ""Button"",
                    ""id"": ""daab9eca-1254-42a1-9b7a-e2366264744a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""moveSelectLeft"",
                    ""type"": ""Button"",
                    ""id"": ""315d7eae-aeb3-4500-b46b-5886c931c80d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""moveSelectRight"",
                    ""type"": ""Button"",
                    ""id"": ""fa4c58c8-6600-4d07-a2bc-fdefaf0293c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""pressSelected"",
                    ""type"": ""Button"",
                    ""id"": ""418e2348-67cb-4ebf-a088-8b19e54a4121"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8089d486-6793-4b76-abb3-7e88bb5b3851"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aeb2a4d9-5aaa-4382-b776-cea5b4fa3674"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e44db95a-0165-4cc3-a04d-fec4f6ccb3f5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3dfee029-7141-40cf-a9d8-515002225cbb"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e1fd648-f62a-403a-8212-fa0e193a2e4d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""pressSelected"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb0491fe-ff49-4de1-b10d-ad9c011f5396"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""pressSelected"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3fdd51f-607c-4ed8-9ae5-f7c5d9191bb4"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d63542c-a927-4c72-a6ec-0c3b2674c977"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65382849-1d19-4b2f-bad0-8f3b6884abe1"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fef19f82-d7c4-47c3-8202-423e85771f7c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ecbec7d-6602-47cc-9721-ed9e48cde0c1"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1c7af07-ee9a-4185-b53a-7dbeb79a82b2"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7947f9f-6bcf-4f35-94aa-439d9c124069"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec37c028-9b4f-4f11-861d-210ca2a411b2"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a802bd47-c8f2-4910-bc0b-8232df2cc155"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fed57699-e901-4145-bb0b-14e9ab5c54b7"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de60f70f-d030-46b5-a7ef-723d1a18c8b4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""496e89ac-f021-4813-b5fb-44b668e47778"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelectRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""World"",
            ""id"": ""bcc6c8d3-48b5-4080-80b5-7ffc101a980e"",
            ""actions"": [
                {
                    ""name"": ""move"",
                    ""type"": ""Value"",
                    ""id"": ""109615f3-2f96-426d-9691-b342e726481e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""sprint"",
                    ""type"": ""Button"",
                    ""id"": ""8b20e364-e444-44db-8e8a-adc250195725"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""cameraTurn"",
                    ""type"": ""Value"",
                    ""id"": ""a8b8d67b-c1ee-4332-9545-c02dc5d86ebc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""interact"",
                    ""type"": ""Button"",
                    ""id"": ""b8893bc8-6c35-405b-9a97-8e0954199031"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""minimap"",
                    ""type"": ""Button"",
                    ""id"": ""2303d92d-950d-410d-a8d3-a5d4479bcbaf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""36cf71d7-04a9-4b47-85bc-f677226812b8"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""a32ac26e-6884-4b1f-99f1-bfa52b2827da"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""abb59b9e-530e-4f0a-8f9f-a1a11c4b1264"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""d555f72c-27cd-4e7b-a87a-143c35620406"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""f2c901a6-b232-4780-8f76-53154a4b3e41"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""25cb3b63-4267-4cca-b24d-11aea2f1ef08"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""961db870-bc2a-4bed-8428-06e01404a1f5"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=2,y=2)"",
                    ""groups"": """",
                    ""action"": ""cameraTurn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4da7b94-10f2-4858-977c-c852921acdf2"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""cameraTurn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f7aed3a-5de2-4863-83b1-bb503e778b29"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c826d893-ea31-4808-ab20-9afff2cd195c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4c93aae-8aaa-4845-b64d-82b3b2fb472f"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64cca2e1-c003-4fcd-aa45-7adf487ce3d1"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f354b499-7446-494e-8ea3-ad5085f06578"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c035f90-03e4-4e0e-abdb-ce7ddc79fd80"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""minimap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2533760e-9190-4313-bba8-567b88ffcab0"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""minimap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Combat"",
            ""id"": ""d09fb0c3-2de6-4b04-88fd-6809a69c43fa"",
            ""actions"": [
                {
                    ""name"": ""basic"",
                    ""type"": ""Button"",
                    ""id"": ""9710a28e-6286-421c-ae6e-1635fe978811"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""skill"",
                    ""type"": ""Button"",
                    ""id"": ""b8ad4090-0fee-4d19-a15a-1d56c858f44b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ult"",
                    ""type"": ""Button"",
                    ""id"": ""272221bf-2e6c-42d7-9b7b-aa0728532ee6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""use"",
                    ""type"": ""Button"",
                    ""id"": ""afa43ae5-3161-46d3-8223-d772ad42c210"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""moveSelLeft"",
                    ""type"": ""Button"",
                    ""id"": ""25e86188-0688-445c-b807-b282165b9242"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""moveSelRight"",
                    ""type"": ""Button"",
                    ""id"": ""13c014a4-4c65-47a9-ba13-8e5b7071e56f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4feb9f9a-290d-432d-9285-63967308fa41"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""basic"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1cd3d953-97a0-46d3-965e-164f8cbca12e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""basic"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46e2b208-e94a-4711-9562-916e79ab34ba"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""skill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""309dea7f-076b-4741-883c-52f9b8157181"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""skill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6213f98c-8012-4b80-9a7c-a9175e0218d2"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ult"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5ecf13f-58ba-423d-8eff-57d4cf092237"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ult"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e8de435-23b0-4e6b-8072-da2c628c6cba"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ult"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""009caa54-f95d-4974-8d13-6bf87dfab08c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aee7cd45-c800-4a62-ba7d-1be7d541bb2b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bc2f9dc-7c75-4afa-b6d4-82f673ae9e6c"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b50e9c42-bb0f-4b20-9b7e-8d1711e9a4b5"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9aa60994-fc80-41b8-8e04-38842954631d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23540e01-e393-4224-94c5-ece60028293d"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""952c3201-f9ae-4234-a9dc-e3fc86b22bcd"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0573c1fa-28eb-4459-987b-2210cd78de3a"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6754d054-8f87-4e79-8cec-474293bd4a59"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f7604ac-c5b2-4df4-85a3-a5ce6f9c4168"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveSelRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""InDev"",
            ""id"": ""46628c27-0fe6-4c97-bea3-4d2bb6685497"",
            ""actions"": [
                {
                    ""name"": ""cursorLockToggle"",
                    ""type"": ""Button"",
                    ""id"": ""22c46e02-ab0a-40b9-9bf9-8e5cb23ca9b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""endRun"",
                    ""type"": ""Button"",
                    ""id"": ""c6bd3f23-2df7-4d56-922b-779cf8b06f8e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""edfb5c77-bc10-461b-8f52-18c4b8b0e95b"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""cursorLockToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8e99091-c073-4c44-862b-3a9de7140294"",
                    ""path"": ""<Keyboard>/end"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""endRun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Universal
        m_Universal = asset.FindActionMap("Universal", throwIfNotFound: true);
        m_Universal_showHideMenu = m_Universal.FindAction("showHideMenu", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_moveSelectUp = m_Menu.FindAction("moveSelectUp", throwIfNotFound: true);
        m_Menu_moveSelectDown = m_Menu.FindAction("moveSelectDown", throwIfNotFound: true);
        m_Menu_moveSelectLeft = m_Menu.FindAction("moveSelectLeft", throwIfNotFound: true);
        m_Menu_moveSelectRight = m_Menu.FindAction("moveSelectRight", throwIfNotFound: true);
        m_Menu_pressSelected = m_Menu.FindAction("pressSelected", throwIfNotFound: true);
        // World
        m_World = asset.FindActionMap("World", throwIfNotFound: true);
        m_World_move = m_World.FindAction("move", throwIfNotFound: true);
        m_World_sprint = m_World.FindAction("sprint", throwIfNotFound: true);
        m_World_cameraTurn = m_World.FindAction("cameraTurn", throwIfNotFound: true);
        m_World_interact = m_World.FindAction("interact", throwIfNotFound: true);
        m_World_minimap = m_World.FindAction("minimap", throwIfNotFound: true);
        // Combat
        m_Combat = asset.FindActionMap("Combat", throwIfNotFound: true);
        m_Combat_basic = m_Combat.FindAction("basic", throwIfNotFound: true);
        m_Combat_skill = m_Combat.FindAction("skill", throwIfNotFound: true);
        m_Combat_ult = m_Combat.FindAction("ult", throwIfNotFound: true);
        m_Combat_use = m_Combat.FindAction("use", throwIfNotFound: true);
        m_Combat_moveSelLeft = m_Combat.FindAction("moveSelLeft", throwIfNotFound: true);
        m_Combat_moveSelRight = m_Combat.FindAction("moveSelRight", throwIfNotFound: true);
        // InDev
        m_InDev = asset.FindActionMap("InDev", throwIfNotFound: true);
        m_InDev_cursorLockToggle = m_InDev.FindAction("cursorLockToggle", throwIfNotFound: true);
        m_InDev_endRun = m_InDev.FindAction("endRun", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Universal
    private readonly InputActionMap m_Universal;
    private List<IUniversalActions> m_UniversalActionsCallbackInterfaces = new List<IUniversalActions>();
    private readonly InputAction m_Universal_showHideMenu;
    public struct UniversalActions
    {
        private @InputActions m_Wrapper;
        public UniversalActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @showHideMenu => m_Wrapper.m_Universal_showHideMenu;
        public InputActionMap Get() { return m_Wrapper.m_Universal; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UniversalActions set) { return set.Get(); }
        public void AddCallbacks(IUniversalActions instance)
        {
            if (instance == null || m_Wrapper.m_UniversalActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UniversalActionsCallbackInterfaces.Add(instance);
            @showHideMenu.started += instance.OnShowHideMenu;
            @showHideMenu.performed += instance.OnShowHideMenu;
            @showHideMenu.canceled += instance.OnShowHideMenu;
        }

        private void UnregisterCallbacks(IUniversalActions instance)
        {
            @showHideMenu.started -= instance.OnShowHideMenu;
            @showHideMenu.performed -= instance.OnShowHideMenu;
            @showHideMenu.canceled -= instance.OnShowHideMenu;
        }

        public void RemoveCallbacks(IUniversalActions instance)
        {
            if (m_Wrapper.m_UniversalActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUniversalActions instance)
        {
            foreach (var item in m_Wrapper.m_UniversalActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UniversalActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UniversalActions @Universal => new UniversalActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private List<IMenuActions> m_MenuActionsCallbackInterfaces = new List<IMenuActions>();
    private readonly InputAction m_Menu_moveSelectUp;
    private readonly InputAction m_Menu_moveSelectDown;
    private readonly InputAction m_Menu_moveSelectLeft;
    private readonly InputAction m_Menu_moveSelectRight;
    private readonly InputAction m_Menu_pressSelected;
    public struct MenuActions
    {
        private @InputActions m_Wrapper;
        public MenuActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @moveSelectUp => m_Wrapper.m_Menu_moveSelectUp;
        public InputAction @moveSelectDown => m_Wrapper.m_Menu_moveSelectDown;
        public InputAction @moveSelectLeft => m_Wrapper.m_Menu_moveSelectLeft;
        public InputAction @moveSelectRight => m_Wrapper.m_Menu_moveSelectRight;
        public InputAction @pressSelected => m_Wrapper.m_Menu_pressSelected;
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void AddCallbacks(IMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_MenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MenuActionsCallbackInterfaces.Add(instance);
            @moveSelectUp.started += instance.OnMoveSelectUp;
            @moveSelectUp.performed += instance.OnMoveSelectUp;
            @moveSelectUp.canceled += instance.OnMoveSelectUp;
            @moveSelectDown.started += instance.OnMoveSelectDown;
            @moveSelectDown.performed += instance.OnMoveSelectDown;
            @moveSelectDown.canceled += instance.OnMoveSelectDown;
            @moveSelectLeft.started += instance.OnMoveSelectLeft;
            @moveSelectLeft.performed += instance.OnMoveSelectLeft;
            @moveSelectLeft.canceled += instance.OnMoveSelectLeft;
            @moveSelectRight.started += instance.OnMoveSelectRight;
            @moveSelectRight.performed += instance.OnMoveSelectRight;
            @moveSelectRight.canceled += instance.OnMoveSelectRight;
            @pressSelected.started += instance.OnPressSelected;
            @pressSelected.performed += instance.OnPressSelected;
            @pressSelected.canceled += instance.OnPressSelected;
        }

        private void UnregisterCallbacks(IMenuActions instance)
        {
            @moveSelectUp.started -= instance.OnMoveSelectUp;
            @moveSelectUp.performed -= instance.OnMoveSelectUp;
            @moveSelectUp.canceled -= instance.OnMoveSelectUp;
            @moveSelectDown.started -= instance.OnMoveSelectDown;
            @moveSelectDown.performed -= instance.OnMoveSelectDown;
            @moveSelectDown.canceled -= instance.OnMoveSelectDown;
            @moveSelectLeft.started -= instance.OnMoveSelectLeft;
            @moveSelectLeft.performed -= instance.OnMoveSelectLeft;
            @moveSelectLeft.canceled -= instance.OnMoveSelectLeft;
            @moveSelectRight.started -= instance.OnMoveSelectRight;
            @moveSelectRight.performed -= instance.OnMoveSelectRight;
            @moveSelectRight.canceled -= instance.OnMoveSelectRight;
            @pressSelected.started -= instance.OnPressSelected;
            @pressSelected.performed -= instance.OnPressSelected;
            @pressSelected.canceled -= instance.OnPressSelected;
        }

        public void RemoveCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_MenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MenuActions @Menu => new MenuActions(this);

    // World
    private readonly InputActionMap m_World;
    private List<IWorldActions> m_WorldActionsCallbackInterfaces = new List<IWorldActions>();
    private readonly InputAction m_World_move;
    private readonly InputAction m_World_sprint;
    private readonly InputAction m_World_cameraTurn;
    private readonly InputAction m_World_interact;
    private readonly InputAction m_World_minimap;
    public struct WorldActions
    {
        private @InputActions m_Wrapper;
        public WorldActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @move => m_Wrapper.m_World_move;
        public InputAction @sprint => m_Wrapper.m_World_sprint;
        public InputAction @cameraTurn => m_Wrapper.m_World_cameraTurn;
        public InputAction @interact => m_Wrapper.m_World_interact;
        public InputAction @minimap => m_Wrapper.m_World_minimap;
        public InputActionMap Get() { return m_Wrapper.m_World; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WorldActions set) { return set.Get(); }
        public void AddCallbacks(IWorldActions instance)
        {
            if (instance == null || m_Wrapper.m_WorldActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_WorldActionsCallbackInterfaces.Add(instance);
            @move.started += instance.OnMove;
            @move.performed += instance.OnMove;
            @move.canceled += instance.OnMove;
            @sprint.started += instance.OnSprint;
            @sprint.performed += instance.OnSprint;
            @sprint.canceled += instance.OnSprint;
            @cameraTurn.started += instance.OnCameraTurn;
            @cameraTurn.performed += instance.OnCameraTurn;
            @cameraTurn.canceled += instance.OnCameraTurn;
            @interact.started += instance.OnInteract;
            @interact.performed += instance.OnInteract;
            @interact.canceled += instance.OnInteract;
            @minimap.started += instance.OnMinimap;
            @minimap.performed += instance.OnMinimap;
            @minimap.canceled += instance.OnMinimap;
        }

        private void UnregisterCallbacks(IWorldActions instance)
        {
            @move.started -= instance.OnMove;
            @move.performed -= instance.OnMove;
            @move.canceled -= instance.OnMove;
            @sprint.started -= instance.OnSprint;
            @sprint.performed -= instance.OnSprint;
            @sprint.canceled -= instance.OnSprint;
            @cameraTurn.started -= instance.OnCameraTurn;
            @cameraTurn.performed -= instance.OnCameraTurn;
            @cameraTurn.canceled -= instance.OnCameraTurn;
            @interact.started -= instance.OnInteract;
            @interact.performed -= instance.OnInteract;
            @interact.canceled -= instance.OnInteract;
            @minimap.started -= instance.OnMinimap;
            @minimap.performed -= instance.OnMinimap;
            @minimap.canceled -= instance.OnMinimap;
        }

        public void RemoveCallbacks(IWorldActions instance)
        {
            if (m_Wrapper.m_WorldActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IWorldActions instance)
        {
            foreach (var item in m_Wrapper.m_WorldActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_WorldActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public WorldActions @World => new WorldActions(this);

    // Combat
    private readonly InputActionMap m_Combat;
    private List<ICombatActions> m_CombatActionsCallbackInterfaces = new List<ICombatActions>();
    private readonly InputAction m_Combat_basic;
    private readonly InputAction m_Combat_skill;
    private readonly InputAction m_Combat_ult;
    private readonly InputAction m_Combat_use;
    private readonly InputAction m_Combat_moveSelLeft;
    private readonly InputAction m_Combat_moveSelRight;
    public struct CombatActions
    {
        private @InputActions m_Wrapper;
        public CombatActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @basic => m_Wrapper.m_Combat_basic;
        public InputAction @skill => m_Wrapper.m_Combat_skill;
        public InputAction @ult => m_Wrapper.m_Combat_ult;
        public InputAction @use => m_Wrapper.m_Combat_use;
        public InputAction @moveSelLeft => m_Wrapper.m_Combat_moveSelLeft;
        public InputAction @moveSelRight => m_Wrapper.m_Combat_moveSelRight;
        public InputActionMap Get() { return m_Wrapper.m_Combat; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CombatActions set) { return set.Get(); }
        public void AddCallbacks(ICombatActions instance)
        {
            if (instance == null || m_Wrapper.m_CombatActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CombatActionsCallbackInterfaces.Add(instance);
            @basic.started += instance.OnBasic;
            @basic.performed += instance.OnBasic;
            @basic.canceled += instance.OnBasic;
            @skill.started += instance.OnSkill;
            @skill.performed += instance.OnSkill;
            @skill.canceled += instance.OnSkill;
            @ult.started += instance.OnUlt;
            @ult.performed += instance.OnUlt;
            @ult.canceled += instance.OnUlt;
            @use.started += instance.OnUse;
            @use.performed += instance.OnUse;
            @use.canceled += instance.OnUse;
            @moveSelLeft.started += instance.OnMoveSelLeft;
            @moveSelLeft.performed += instance.OnMoveSelLeft;
            @moveSelLeft.canceled += instance.OnMoveSelLeft;
            @moveSelRight.started += instance.OnMoveSelRight;
            @moveSelRight.performed += instance.OnMoveSelRight;
            @moveSelRight.canceled += instance.OnMoveSelRight;
        }

        private void UnregisterCallbacks(ICombatActions instance)
        {
            @basic.started -= instance.OnBasic;
            @basic.performed -= instance.OnBasic;
            @basic.canceled -= instance.OnBasic;
            @skill.started -= instance.OnSkill;
            @skill.performed -= instance.OnSkill;
            @skill.canceled -= instance.OnSkill;
            @ult.started -= instance.OnUlt;
            @ult.performed -= instance.OnUlt;
            @ult.canceled -= instance.OnUlt;
            @use.started -= instance.OnUse;
            @use.performed -= instance.OnUse;
            @use.canceled -= instance.OnUse;
            @moveSelLeft.started -= instance.OnMoveSelLeft;
            @moveSelLeft.performed -= instance.OnMoveSelLeft;
            @moveSelLeft.canceled -= instance.OnMoveSelLeft;
            @moveSelRight.started -= instance.OnMoveSelRight;
            @moveSelRight.performed -= instance.OnMoveSelRight;
            @moveSelRight.canceled -= instance.OnMoveSelRight;
        }

        public void RemoveCallbacks(ICombatActions instance)
        {
            if (m_Wrapper.m_CombatActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICombatActions instance)
        {
            foreach (var item in m_Wrapper.m_CombatActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CombatActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CombatActions @Combat => new CombatActions(this);

    // InDev
    private readonly InputActionMap m_InDev;
    private List<IInDevActions> m_InDevActionsCallbackInterfaces = new List<IInDevActions>();
    private readonly InputAction m_InDev_cursorLockToggle;
    private readonly InputAction m_InDev_endRun;
    public struct InDevActions
    {
        private @InputActions m_Wrapper;
        public InDevActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @cursorLockToggle => m_Wrapper.m_InDev_cursorLockToggle;
        public InputAction @endRun => m_Wrapper.m_InDev_endRun;
        public InputActionMap Get() { return m_Wrapper.m_InDev; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InDevActions set) { return set.Get(); }
        public void AddCallbacks(IInDevActions instance)
        {
            if (instance == null || m_Wrapper.m_InDevActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InDevActionsCallbackInterfaces.Add(instance);
            @cursorLockToggle.started += instance.OnCursorLockToggle;
            @cursorLockToggle.performed += instance.OnCursorLockToggle;
            @cursorLockToggle.canceled += instance.OnCursorLockToggle;
            @endRun.started += instance.OnEndRun;
            @endRun.performed += instance.OnEndRun;
            @endRun.canceled += instance.OnEndRun;
        }

        private void UnregisterCallbacks(IInDevActions instance)
        {
            @cursorLockToggle.started -= instance.OnCursorLockToggle;
            @cursorLockToggle.performed -= instance.OnCursorLockToggle;
            @cursorLockToggle.canceled -= instance.OnCursorLockToggle;
            @endRun.started -= instance.OnEndRun;
            @endRun.performed -= instance.OnEndRun;
            @endRun.canceled -= instance.OnEndRun;
        }

        public void RemoveCallbacks(IInDevActions instance)
        {
            if (m_Wrapper.m_InDevActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInDevActions instance)
        {
            foreach (var item in m_Wrapper.m_InDevActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InDevActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InDevActions @InDev => new InDevActions(this);
    public interface IUniversalActions
    {
        void OnShowHideMenu(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
        void OnMoveSelectUp(InputAction.CallbackContext context);
        void OnMoveSelectDown(InputAction.CallbackContext context);
        void OnMoveSelectLeft(InputAction.CallbackContext context);
        void OnMoveSelectRight(InputAction.CallbackContext context);
        void OnPressSelected(InputAction.CallbackContext context);
    }
    public interface IWorldActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnCameraTurn(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnMinimap(InputAction.CallbackContext context);
    }
    public interface ICombatActions
    {
        void OnBasic(InputAction.CallbackContext context);
        void OnSkill(InputAction.CallbackContext context);
        void OnUlt(InputAction.CallbackContext context);
        void OnUse(InputAction.CallbackContext context);
        void OnMoveSelLeft(InputAction.CallbackContext context);
        void OnMoveSelRight(InputAction.CallbackContext context);
    }
    public interface IInDevActions
    {
        void OnCursorLockToggle(InputAction.CallbackContext context);
        void OnEndRun(InputAction.CallbackContext context);
    }
}
